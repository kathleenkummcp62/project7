#!/usr/bin/env python3
"""
–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è VPN –≤–µ–Ω–¥–æ—Ä–æ–≤
"""

import os
import sys
import json
import argparse
from pathlib import Path

# –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
parser = argparse.ArgumentParser(description="Prepare VPN Credentials")
parser.add_argument("--output-dir", default="creds", help="–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Ñ–∞–π–ª–æ–≤ —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
parser.add_argument("--config", default="vpn_test_config.json", help="–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
args = parser.parse_args()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è VPN –≤–µ–Ω–¥–æ—Ä–æ–≤")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        with open(args.config, "r") as f:
            config = json.load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –≤—ã—Ö–æ–¥–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    os.makedirs(args.output_dir, exist_ok=True)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –≤–µ–Ω–¥–æ—Ä
    for vendor, task_config in config["tasks"].items():
        targets = task_config["targets"]
        
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–∑–∞–º–µ–Ω—è–µ–º : –Ω–∞ ;)
        fixed_targets = []
        for target in targets:
            # –î–ª—è watchguard –∏ cisco –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
            if vendor in ["watchguard", "cisco"]:
                fixed_target = target
            else:
                # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–º–µ–Ω—è–µ–º : –Ω–∞ ; (—Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –¥–≤–∞)
                parts = target.split(":", 2)
                if len(parts) >= 3:
                    fixed_target = f"{parts[0]}:{parts[1]};{parts[2]}"
                else:
                    fixed_target = target.replace(":", ";", 2)
            
            fixed_targets.append(fixed_target)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        output_file = Path(args.output_dir) / f"{vendor}.txt"
        with open(output_file, "w") as f:
            f.write("\n".join(fixed_targets))
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª —Å —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è {vendor}: {output_file}")
    
    print(f"\n‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    return True

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\nüõë –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)